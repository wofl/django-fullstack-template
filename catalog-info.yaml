apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: project-python-django-fullstack
  title: Django Fullstack Project
  description: Project template for a fullstack Django application
spec:
  owner: group:exxcellent/python
  templater: cookiecutter
  type: service
  parameters:
    - title: Project name
      required:
        - projectName
      properties:
        projectName:
          title: Project-Name
          type: string
          description: Unique name of the project
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a location (owner must be a valid gitlab group)
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab-ext.exxcellent.de
            requestUserCredentials:
              secretsKey: USER_OAUTH_TOKEN

  steps:
    # Prepare the template in a local filesystem
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        cookiecutterCompat: true
        values:
          project_name: ${{ parameters.projectName }}

    # This step publishes the contents of the working directory to GitHub.
    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        allowedHosts: ['gitlab-ext.exxcellent.de']
        description: This is ${{ parameters.projectName }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: public
        token: ${{ secrets.USER_OAUTH_TOKEN }}

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}